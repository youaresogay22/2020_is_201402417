from Crypto.PublicKey import RSA

from week_6.rsa import RSAKey


def test_rsa():
    key = RSA.generate(2048)
    rsa = RSAKey(key.p, key.q)
    rsa.set_e(key.e)

    assert key.d == rsa.d


def test_rsa_encrypt():
    p = 9723448991222331098330293371197519246446906995517093957384966642329511534161627658859950763542683697458467770974347360725590854862427735703874399411721649
    q = 11540723500948111320993538253873114375084294314146076116728562712106488235163623146463138718667477924480917723380997967855069067587011284522770903581114923
    rsa = RSAKey(p, q)
    rsa.set_e(65537)
    enc = 29969951468664476302937477762732022233469971103172116878002809459260944553930917214178068894844022974949846557970636203142733215266594607147599916516061086801166518057905572637046702852194729192641380907575599582737054448857850832479388633886848465019040441608795733227406136322183755688912100595227860028276
    assert enc < rsa.n
    assert enc == rsa.encrypt(20201007)


def test_rsa_decrypt():
    p = 9723448991222331098330293371197519246446906995517093957384966642329511534161627658859950763542683697458467770974347360725590854862427735703874399411721649
    q = 11540723500948111320993538253873114375084294314146076116728562712106488235163623146463138718667477924480917723380997967855069067587011284522770903581114923
    rsa = RSAKey(p, q)
    rsa.set_e(65537)
    enc = 29969951468664476302937477762732022233469971103172116878002809459260944553930917214178068894844022974949846557970636203142733215266594607147599916516061086801166518057905572637046702852194729192641380907575599582737054448857850832479388633886848465019040441608795733227406136322183755688912100595227860028276
    assert 20201007 == rsa.decrypt(enc)
